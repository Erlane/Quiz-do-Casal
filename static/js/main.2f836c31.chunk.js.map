{"version":3,"sources":["assets/heart.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","SubContainer","SubConteinerHeader","Title","h1","Image","img","Content","SubContent","Paragraph","p","Span","span","Input","input","Button","button","ParagraphScore","App","handleChange","option","setState","userResponse","respondeu","nextQuestion","state","currentQuestion","result","listQuestion","correct","answer","isUltima","length","lastAnswer","myAnswer","undefined","id","question","options","this","src","Heart","alt","filter","item","map","key","console","log","type","name","value","onChange","disabled","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f836c31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.bd7c134f.png\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Heart from './assets/heart.png';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: linear-gradient(to right, red, transparent, #4a1a10fa); \n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SubContainer = styled.div`\n  width: 40%;\n  height: 70vh;\n  background-color: #FFFFFF;\n  border-radius: 5px;\n  padding: 1.6rem 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media(max-width: 1024px){\n    width: 50%;\n  }\n\n  @media(max-width: 768px){\n    width: 65%;\n  }\n\n  @media(max-width: 475px){\n    width: 90%;\n  }\n`;\n\nconst SubConteinerHeader = styled.div`\n  display: flex;\n`;\n\nconst Title = styled.h1`\n  color: red;\n  font-size: 2.5rem;\n  font-family: 'Dancing Script', cursive;\n  padding: 0 1rem 1.2rem 0;\n`;\n\nconst Image = styled.img`\n  height: 6vh;\n  transform: rotate(55deg);\n`;\n\nconst Content = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst SubContent = styled.div`\n  width: 100%;\n`;\n\nconst Paragraph = styled.p`\n  color: #424242;\n  font-size: 1.1rem;\n  font-family: 'Lora', serif;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  width: 100%;\n  background-color: transparent;\n  border: 1px solid lightgray;\n  border-radius: 3px;\n  color: #151515;\n  font-size: 1.09rem;\n  font-family: 'Lora', serif;\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n  padding: 0.5rem 0.4rem;\n\n  &:hover {\n    background-color: #ECEEF0;\n  }\n`;\n\nconst Input = styled.input`\n  margin-right: 0.5rem;\n`;\n\nconst Button = styled.button`\n  width: 20%;\n  background-color: red;\n  border: 2px solid #8A0808;\n  color: #FFFFFF;\n  font-size: 1rem;\n  font-style: italic;\n  font-weight: bold;\n  padding: 0.5rem 0;\n  margin-top: 2rem;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ParagraphScore = styled.p`\n  color: red;\n  font-size: 2rem;\n  text-align: center;\n  margin-top: 5rem;\n  font-family: 'Lora', serif;\n\n  @media(max-width: 475px){\n    font-size: 1.3rem;\n    margin-top: 3rem;\n  }\n`;\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      myAnswer: null,\n      currentQuestion: 0,\n      userResponse: '',\n      result: 0,\n      respondeu: false,\n      lastAnswer: undefined,\n      listQuestion: [\n        {\n          id: 0,\n          question: 'Onde conheçaram a se falar ?',\n          options: ['Rede Social', 'Praia', 'Trabalho'],\n          answer: 'Rede Social'\n        },\n        {\n          id: 1,\n          question: 'Primeira vez que ficaram ?',\n          options: ['Shopping', 'Casarão', 'Praia'],\n          answer: 'Casarão'\n        },\n        {\n          id: 2,\n          question: 'Primeiro filme assistido no cinema foi ?',\n          options: ['Extraordinário', 'Velozes & Furiosos 6', 'O Rastro'],\n          answer: 'O Rastro'\n        },\n        {\n          id: 3,\n          question: 'O que gostam de fazer juntos ?',\n          options: ['Sair', 'Comer', 'Ver Filmes'],\n          answer: 'Comer'\n        },\n        {\n          id: 4,\n          question: 'A primeira viagem juntos foi para ?',\n          options: ['Chapada dos Veadeiros', 'Cabo Frio', 'Recife'],\n          answer: 'Cabo Frio'\n        },\n        {\n          id: 5,\n          question: 'Estão juntos há ... ?',\n          options: ['1.7meses', '2 anos', '2.8meses'],\n          answer: '2.8meses'\n        }\n      ]\n    };\n  }\n\n  handleChange = (option) => {\n    this.setState({\n      userResponse: option,\n      respondeu: true,\n    });\n  }\n\n  nextQuestion = () => {\n    let { currentQuestion, result, userResponse, listQuestion } = this.state;\n    const correct = listQuestion[currentQuestion].answer === userResponse;\n    let isUltima = listQuestion.length - 1 === currentQuestion;\n    if (correct) {\n      result = result + 1;\n      }\n         this.setState({\n          currentQuestion: currentQuestion + 1,\n          result,\n          respondeu: false,\n          userResponse: '',\n          lastAnswer: isUltima,   \n        })\n  }\n\n  render() {\n    const { listQuestion, currentQuestion, userResponse, respondeu, lastAnswer,result } = this.state;\n    return (\n      <Container>\n        <SubContainer>\n          <SubConteinerHeader>\n            <Title>Quiz do Casal</Title> <Image src={Heart} alt='heart' />\n          </SubConteinerHeader>\n          <Content>\n            {listQuestion.filter(item => item.id === currentQuestion).map(question => (\n              <SubContent key={question.id}>\n                {console.log()}\n                <Paragraph>{question.question}</Paragraph>\n                {question.options.map(option => (\n                  <Span>\n                    <label>\n                      <Input\n                        type=\"radio\"\n                        name=\"answer\"\n                        value={userResponse}\n                        onChange={() => this.handleChange(option)}\n                      />\n                      {option}\n                    </label>\n                  </Span>))}\n              </SubContent>\n            ))}\n          </Content>\n          {!lastAnswer && <Button disabled={!respondeu} onClick={this.nextQuestion}>Next</Button>}\n          {lastAnswer && <ParagraphScore>Parabéns por terminar o Quiz =)</ParagraphScore>}\n          {lastAnswer && <ParagraphScore>Sua pontuação é {result} de {listQuestion.length} !</ParagraphScore>}\n        </SubContainer>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}